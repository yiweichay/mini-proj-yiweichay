

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Oct 31 21:35:21 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    16                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 05/05/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC18F67K40 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     _ANSELAbits	set	3730
    54  0000                     _PIR0bits	set	3635
    55  0000                     _PIE0bits	set	3625
    56  0000                     _PIE2bits	set	3627
    57  0000                     _CM1CON1bits	set	3793
    58  0000                     _CM1CON0bits	set	3792
    59  0000                     _CM1PCHbits	set	3795
    60  0000                     _CM1NCHbits	set	3794
    61  0000                     _DAC1CON1bits	set	3783
    62  0000                     _DAC1CON0bits	set	3782
    63  0000                     _ADPCH	set	3935
    64  0000                     _ADREFbits	set	3928
    65  0000                     _ADRESH	set	3940
    66  0000                     _ADCON0bits	set	3936
    67  0000                     _TRISHbits	set	3976
    68  0000                     _LATBbits	set	3962
    69  0000                     _LATFbits	set	3966
    70  0000                     _LATAbits	set	3961
    71  0000                     _LATGbits	set	3967
    72  0000                     _TRISBbits	set	3970
    73  0000                     _TRISAbits	set	3969
    74  0000                     _TRISGbits	set	3975
    75  0000                     _TMR0L	set	4051
    76  0000                     _TMR0H	set	4052
    77  0000                     _LATHbits	set	3968
    78  0000                     _INTCONbits	set	4082
    79  0000                     _TRISFbits	set	3974
    80                           
    81                           ; #config settings
    82                           
    83                           	psect	cinit
    84  0000FA                     __pcinit:
    85                           	callstack 0
    86  0000FA                     start_initialization:
    87                           	callstack 0
    88  0000FA                     __initialization:
    89                           	callstack 0
    90  0000FA                     end_of_initialization:
    91                           	callstack 0
    92  0000FA                     __end_of__initialization:
    93                           	callstack 0
    94  0000FA  9008               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    95  0000FC  9208               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    96  0000FE  0100               	movlb	0
    97  000100  EF5C  F000         	goto	_main	;jump to C main() function
    98                           
    99                           	psect	cstackCOMRAM
   100  000001                     __pcstackCOMRAM:
   101                           	callstack 0
   102  000001                     ??_HighISR:
   103                           
   104                           ; 1 bytes @ 0x0
   105  000001                     	ds	1
   106  000002                     ?_ADC_getval:
   107                           	callstack 0
   108  000002                     set_led@value:
   109                           	callstack 0
   110                           
   111                           ; 2 bytes @ 0x1
   112  000002                     	ds	2
   113  000004                     ADC_getval@tmpval:
   114                           	callstack 0
   115                           
   116                           ; 2 bytes @ 0x3
   117  000004                     	ds	2
   118  000006                     main@LDRoutput:
   119                           	callstack 0
   120                           
   121                           ; 2 bytes @ 0x5
   122  000006                     	ds	2
   123                           
   124 ;;
   125 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   126 ;;
   127 ;; *************** function _main *****************
   128 ;; Defined at:
   129 ;;		line 24 in file "main.c"
   130 ;; Parameters:    Size  Location     Type
   131 ;;		None
   132 ;; Auto vars:     Size  Location     Type
   133 ;;  LDRoutput       2    5[COMRAM] unsigned int 
   134 ;; Return value:  Size  Location     Type
   135 ;;                  1    wreg      void 
   136 ;; Registers used:
   137 ;;		wreg, status,2, status,0, cstack
   138 ;; Tracked objects:
   139 ;;		On entry : 0/0
   140 ;;		On exit  : 0/0
   141 ;;		Unchanged: 0/0
   142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   144 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   146 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   147 ;;Total ram usage:        2 bytes
   148 ;; Hardware stack levels required when called: 2
   149 ;; This function calls:
   150 ;;		_ADC_getval
   151 ;;		_ADC_init
   152 ;;		_led_init
   153 ;;		_set_led
   154 ;; This function is called by:
   155 ;;		Startup code after reset
   156 ;; This function uses a non-reentrant model
   157 ;;
   158                           
   159                           	psect	text0
   160  0000B8                     __ptext0:
   161                           	callstack 0
   162  0000B8                     _main:
   163                           	callstack 29
   164  0000B8                     
   165                           ;main.c: 26:     led_init();
   166  0000B8  EC82  F000         	call	_led_init	;wreg free
   167  0000BC                     
   168                           ;main.c: 27:     ADC_init();
   169  0000BC  EC70  F000         	call	_ADC_init	;wreg free
   170  0000C0                     l992:
   171                           
   172                           ;main.c: 31:         LDRoutput = ADC_getval();
   173  0000C0  EC44  F000         	call	_ADC_getval	;wreg free
   174  0000C4  C002  F006         	movff	?_ADC_getval,main@LDRoutput
   175  0000C8  C003  F007         	movff	?_ADC_getval+1,main@LDRoutput+1
   176  0000CC                     
   177                           ;main.c: 32:         set_led(LDRoutput);
   178  0000CC  C006  F002         	movff	main@LDRoutput,set_led@value
   179  0000D0  C007  F003         	movff	main@LDRoutput+1,set_led@value+1
   180  0000D4  EC29  F000         	call	_set_led	;wreg free
   181  0000D8  EF60  F000         	goto	l992
   182  0000DC  EF27  F000         	goto	start
   183  0000E0                     __end_of_main:
   184                           	callstack 0
   185                           
   186 ;; *************** function _set_led *****************
   187 ;; Defined at:
   188 ;;		line 18 in file "led.c"
   189 ;; Parameters:    Size  Location     Type
   190 ;;  value           2    1[COMRAM] unsigned int 
   191 ;; Auto vars:     Size  Location     Type
   192 ;;		None
   193 ;; Return value:  Size  Location     Type
   194 ;;                  1    wreg      void 
   195 ;; Registers used:
   196 ;;		wreg, status,2, status,0
   197 ;; Tracked objects:
   198 ;;		On entry : 0/0
   199 ;;		On exit  : 0/0
   200 ;;		Unchanged: 0/0
   201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   202 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   205 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   206 ;;Total ram usage:        2 bytes
   207 ;; Hardware stack levels used: 1
   208 ;; Hardware stack levels required when called: 1
   209 ;; This function calls:
   210 ;;		Nothing
   211 ;; This function is called by:
   212 ;;		_main
   213 ;; This function uses a non-reentrant model
   214 ;;
   215                           
   216                           	psect	text1
   217  000052                     __ptext1:
   218                           	callstack 0
   219  000052                     _set_led:
   220                           	callstack 29
   221  000052                     
   222                           ;led.c: 19:     if(value >= 0b1111){
   223  000052  5003               	movf	(set_led@value+1)^0,w,c
   224  000054  E109               	bnz	u280
   225  000056  0E0F               	movlw	15
   226  000058  5C02               	subwf	set_led@value^0,w,c
   227  00005A  A0D8               	btfss	status,0,c
   228  00005C  EF32  F000         	goto	u281
   229  000060  EF34  F000         	goto	u280
   230  000064                     u281:
   231  000064  EF37  F000         	goto	l984
   232  000068                     u280:
   233  000068                     
   234                           ;led.c: 20:         LATHbits.LATH3 = 0;
   235  000068  9680               	bcf	128,3,c	;volatile
   236                           
   237                           ;led.c: 21:     }
   238  00006A  EF43  F000         	goto	l131
   239  00006E                     l984:
   240  00006E  5003               	movf	(set_led@value+1)^0,w,c
   241  000070  E107               	bnz	u291
   242  000072  0E0D               	movlw	13
   243  000074  5C02               	subwf	set_led@value^0,w,c
   244  000076  B0D8               	btfsc	status,0,c
   245  000078  EF40  F000         	goto	u291
   246  00007C  EF42  F000         	goto	u290
   247  000080                     u291:
   248  000080  EF43  F000         	goto	l131
   249  000084                     u290:
   250  000084                     
   251                           ;led.c: 23:         LATHbits.LATH3 = 1;
   252  000084  8680               	bsf	128,3,c	;volatile
   253  000086                     l131:
   254  000086  0012               	return		;funcret
   255  000088                     __end_of_set_led:
   256                           	callstack 0
   257                           
   258 ;; *************** function _led_init *****************
   259 ;; Defined at:
   260 ;;		line 12 in file "led.c"
   261 ;; Parameters:    Size  Location     Type
   262 ;;		None
   263 ;; Auto vars:     Size  Location     Type
   264 ;;		None
   265 ;; Return value:  Size  Location     Type
   266 ;;                  1    wreg      void 
   267 ;; Registers used:
   268 ;;		None
   269 ;; Tracked objects:
   270 ;;		On entry : 0/0
   271 ;;		On exit  : 0/0
   272 ;;		Unchanged: 0/0
   273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   278 ;;Total ram usage:        0 bytes
   279 ;; Hardware stack levels used: 1
   280 ;; Hardware stack levels required when called: 1
   281 ;; This function calls:
   282 ;;		Nothing
   283 ;; This function is called by:
   284 ;;		_main
   285 ;; This function uses a non-reentrant model
   286 ;;
   287                           
   288                           	psect	text2
   289  000104                     __ptext2:
   290                           	callstack 0
   291  000104                     _led_init:
   292                           	callstack 29
   293  000104                     
   294                           ;led.c: 14:     LATHbits.LATH3 = 0;
   295  000104  9680               	bcf	128,3,c	;volatile
   296                           
   297                           ;led.c: 15:     TRISHbits.TRISH3 = 0;
   298  000106  9688               	bcf	136,3,c	;volatile
   299  000108  0012               	return		;funcret
   300  00010A                     __end_of_led_init:
   301                           	callstack 0
   302                           
   303 ;; *************** function _ADC_init *****************
   304 ;; Defined at:
   305 ;;		line 9 in file "ADC.c"
   306 ;; Parameters:    Size  Location     Type
   307 ;;		None
   308 ;; Auto vars:     Size  Location     Type
   309 ;;		None
   310 ;; Return value:  Size  Location     Type
   311 ;;                  1    wreg      void 
   312 ;; Registers used:
   313 ;;		wreg, status,2
   314 ;; Tracked objects:
   315 ;;		On entry : 0/0
   316 ;;		On exit  : 0/0
   317 ;;		Unchanged: 0/0
   318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   323 ;;Total ram usage:        0 bytes
   324 ;; Hardware stack levels used: 1
   325 ;; Hardware stack levels required when called: 1
   326 ;; This function calls:
   327 ;;		Nothing
   328 ;; This function is called by:
   329 ;;		_main
   330 ;; This function uses a non-reentrant model
   331 ;;
   332                           
   333                           	psect	text3
   334  0000E0                     __ptext3:
   335                           	callstack 0
   336  0000E0                     _ADC_init:
   337                           	callstack 29
   338  0000E0                     
   339                           ;ADC.c: 11:     TRISAbits.TRISA3=1;
   340  0000E0  8681               	bsf	129,3,c	;volatile
   341                           
   342                           ;ADC.c: 12:     ANSELAbits.ANSELA3=1;
   343  0000E2  010E               	movlb	14	; () banked
   344  0000E4  8792               	bsf	146,3,b	;volatile
   345                           
   346                           ;ADC.c: 15:     ADREFbits.ADNREF = 0;
   347  0000E6  010F               	movlb	15	; () banked
   348  0000E8  9958               	bcf	88,4,b	;volatile
   349  0000EA                     
   350                           ; BSR set to: 15
   351                           ;ADC.c: 16:     ADREFbits.ADPREF = 0b00;
   352  0000EA  0EFC               	movlw	-4
   353  0000EC  1758               	andwf	88,f,b	;volatile
   354                           
   355                           ;ADC.c: 17:     ADPCH=0b11;
   356  0000EE  0E03               	movlw	3
   357  0000F0  6F5F               	movwf	95,b	;volatile
   358  0000F2                     
   359                           ; BSR set to: 15
   360                           ;ADC.c: 18:     ADCON0bits.ADFM = 0;
   361  0000F2  9460               	bcf	96,2,c	;volatile
   362  0000F4                     
   363                           ; BSR set to: 15
   364                           ;ADC.c: 19:     ADCON0bits.ADCS = 1;
   365  0000F4  8860               	bsf	96,4,c	;volatile
   366  0000F6                     
   367                           ; BSR set to: 15
   368                           ;ADC.c: 20:     ADCON0bits.ADON = 1;
   369  0000F6  8E60               	bsf	96,7,c	;volatile
   370  0000F8                     
   371                           ; BSR set to: 15
   372  0000F8  0012               	return		;funcret
   373  0000FA                     __end_of_ADC_init:
   374                           	callstack 0
   375                           
   376 ;; *************** function _ADC_getval *****************
   377 ;; Defined at:
   378 ;;		line 23 in file "ADC.c"
   379 ;; Parameters:    Size  Location     Type
   380 ;;		None
   381 ;; Auto vars:     Size  Location     Type
   382 ;;  tmpval          2    3[COMRAM] unsigned int 
   383 ;; Return value:  Size  Location     Type
   384 ;;                  2    1[COMRAM] unsigned int 
   385 ;; Registers used:
   386 ;;		wreg, status,2, status,0
   387 ;; Tracked objects:
   388 ;;		On entry : 0/0
   389 ;;		On exit  : 0/0
   390 ;;		Unchanged: 0/0
   391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   392 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   393 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   395 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   396 ;;Total ram usage:        4 bytes
   397 ;; Hardware stack levels used: 1
   398 ;; Hardware stack levels required when called: 1
   399 ;; This function calls:
   400 ;;		Nothing
   401 ;; This function is called by:
   402 ;;		_main
   403 ;; This function uses a non-reentrant model
   404 ;;
   405                           
   406                           	psect	text4
   407  000088                     __ptext4:
   408                           	callstack 0
   409  000088                     _ADC_getval:
   410                           	callstack 29
   411  000088                     
   412                           ;ADC.c: 25:     unsigned int tmpval;;ADC.c: 27:     ADCON0bits.GO = 1;
   413  000088  8060               	bsf	96,0,c	;volatile
   414  00008A                     l149:
   415  00008A  B060               	btfsc	96,0,c	;volatile
   416  00008C  EF4A  F000         	goto	u271
   417  000090  EF4C  F000         	goto	u270
   418  000094                     u271:
   419  000094  EF45  F000         	goto	l149
   420  000098                     u270:
   421  000098                     
   422                           ;ADC.c: 31:     tmpval = ADRESH;
   423  000098  CF64 F004          	movff	3940,ADC_getval@tmpval	;volatile
   424  00009C  6A05               	clrf	(ADC_getval@tmpval+1)^0,c
   425  00009E                     
   426                           ;ADC.c: 35:     tmpval = 255 - tmpval;
   427  00009E  5004               	movf	ADC_getval@tmpval^0,w,c
   428  0000A0  08FF               	sublw	255
   429  0000A2  6E04               	movwf	ADC_getval@tmpval^0,c
   430  0000A4  5005               	movf	(ADC_getval@tmpval+1)^0,w,c
   431  0000A6  A0D8               	btfss	status,0,c
   432  0000A8  2AE8               	incf	wreg,f,c
   433  0000AA  0800               	sublw	0
   434  0000AC  6E05               	movwf	(ADC_getval@tmpval+1)^0,c
   435  0000AE                     
   436                           ;ADC.c: 37:     return tmpval;
   437  0000AE  C004  F002         	movff	ADC_getval@tmpval,?_ADC_getval
   438  0000B2  C005  F003         	movff	ADC_getval@tmpval+1,?_ADC_getval+1
   439  0000B6  0012               	return		;funcret
   440  0000B8                     __end_of_ADC_getval:
   441                           	callstack 0
   442                           
   443 ;; *************** function _HighISR *****************
   444 ;; Defined at:
   445 ;;		line 22 in file "interrupts.c"
   446 ;; Parameters:    Size  Location     Type
   447 ;;		None
   448 ;; Auto vars:     Size  Location     Type
   449 ;;		None
   450 ;; Return value:  Size  Location     Type
   451 ;;                  1    wreg      void 
   452 ;; Registers used:
   453 ;;		wreg, status,2, status,0
   454 ;; Tracked objects:
   455 ;;		On entry : 0/0
   456 ;;		On exit  : 0/0
   457 ;;		Unchanged: 0/0
   458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   461 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   462 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   463 ;;Total ram usage:        1 bytes
   464 ;; Hardware stack levels used: 1
   465 ;; This function calls:
   466 ;;		Nothing
   467 ;; This function is called by:
   468 ;;		Interrupt level 2
   469 ;; This function uses a non-reentrant model
   470 ;;
   471                           
   472                           	psect	intcode
   473  000008                     __pintcode:
   474                           	callstack 0
   475  000008                     _HighISR:
   476                           	callstack 29
   477                           
   478                           ;incstack = 0
   479  000008  8208               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   480  00000A                     
   481                           ;interrupts.c: 25:     if(PIR0bits.TMR0IF){
   482  00000A  010E               	movlb	14	; () banked
   483  00000C  AB33               	btfss	51,5,b	;volatile
   484  00000E  EF0B  F000         	goto	i2u13_41
   485  000012  EF0D  F000         	goto	i2u13_40
   486  000016                     i2u13_41:
   487  000016  EF25  F000         	goto	i2l59
   488  00001A                     i2u13_40:
   489  00001A                     
   490                           ; BSR set to: 14
   491                           ;interrupts.c: 26:         LATHbits.LATH3 = !LATHbits.LATH3;
   492  00001A  A680               	btfss	128,3,c	;volatile
   493  00001C  EF12  F000         	goto	i2u14_41
   494  000020  EF16  F000         	goto	i2u14_40
   495  000024                     i2u14_41:
   496  000024  6A01               	clrf	??_HighISR^0,c
   497  000026  2A01               	incf	??_HighISR^0,f,c
   498  000028  EF17  F000         	goto	i2u15_48
   499  00002C                     i2u14_40:
   500  00002C  6A01               	clrf	??_HighISR^0,c
   501  00002E                     i2u15_48:
   502  00002E  4601               	rlncf	??_HighISR^0,f,c
   503  000030  4601               	rlncf	??_HighISR^0,f,c
   504  000032  4601               	rlncf	??_HighISR^0,f,c
   505  000034  5080               	movf	128,w,c	;volatile
   506  000036  1801               	xorwf	??_HighISR^0,w,c
   507  000038  0BF7               	andlw	-9
   508  00003A  1801               	xorwf	??_HighISR^0,w,c
   509  00003C  6E80               	movwf	128,c	;volatile
   510  00003E                     
   511                           ;interrupts.c: 27:         TMR0H = 0b1011;
   512  00003E  0E0B               	movlw	11
   513  000040  6ED4               	movwf	212,c	;volatile
   514  000042                     
   515                           ;interrupts.c: 28:         TMR0L = 0b11011011;
   516  000042  0EDB               	movlw	219
   517  000044  6ED3               	movwf	211,c	;volatile
   518  000046                     
   519                           ;interrupts.c: 29:         PIR0bits.TMR0IF = 0;
   520  000046  010E               	movlb	14	; () banked
   521  000048  9B33               	bcf	51,5,b	;volatile
   522  00004A                     i2l59:
   523                           
   524                           ; BSR set to: 14
   525  00004A  9208               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   526  00004C  0011               	retfie		f
   527  00004E                     __end_of_HighISR:
   528                           	callstack 0
   529  0000                     
   530                           	psect	rparam
   531  0000                     
   532                           	psect	temp
   533  000008                     btemp:
   534                           	callstack 0
   535  000008                     	ds	1
   536  0000                     int$flags	set	btemp
   537  0000                     wtemp8	set	btemp+1
   538  0000                     ttemp5	set	btemp+1
   539  0000                     ttemp6	set	btemp+4
   540  0000                     ttemp7	set	btemp+8
   541                           
   542                           	psect	idloc
   543                           
   544                           ;Config register IDLOC0 @ 0x200000
   545                           ;	unspecified, using default values
   546  200000                     	org	2097152
   547  200000  0FFF               	dw	4095
   548                           
   549                           ;Config register IDLOC1 @ 0x200002
   550                           ;	unspecified, using default values
   551  200002                     	org	2097154
   552  200002  0FFF               	dw	4095
   553                           
   554                           ;Config register IDLOC2 @ 0x200004
   555                           ;	unspecified, using default values
   556  200004                     	org	2097156
   557  200004  0FFF               	dw	4095
   558                           
   559                           ;Config register IDLOC3 @ 0x200006
   560                           ;	unspecified, using default values
   561  200006                     	org	2097158
   562  200006  0FFF               	dw	4095
   563                           
   564                           ;Config register IDLOC4 @ 0x200008
   565                           ;	unspecified, using default values
   566  200008                     	org	2097160
   567  200008  0FFF               	dw	4095
   568                           
   569                           ;Config register IDLOC5 @ 0x20000A
   570                           ;	unspecified, using default values
   571  20000A                     	org	2097162
   572  20000A  0FFF               	dw	4095
   573                           
   574                           ;Config register IDLOC6 @ 0x20000C
   575                           ;	unspecified, using default values
   576  20000C                     	org	2097164
   577  20000C  0FFF               	dw	4095
   578                           
   579                           ;Config register IDLOC7 @ 0x20000E
   580                           ;	unspecified, using default values
   581  20000E                     	org	2097166
   582  20000E  0FFF               	dw	4095
   583                           
   584                           	psect	config
   585                           
   586                           ;Config register CONFIG1L @ 0x300000
   587                           ;	External Oscillator mode Selection bits
   588                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
   589                           ;	Power-up default value for COSC bits
   590                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
   591  300000                     	org	3145728
   592  300000  AA                 	db	170
   593                           
   594                           ;Config register CONFIG1H @ 0x300001
   595                           ;	unspecified, using default values
   596                           ;	Clock Out Enable bit
   597                           ;	CLKOUTEN = 0x1, unprogrammed default
   598                           ;	Clock Switch Enable bit
   599                           ;	CSWEN = 0x1, unprogrammed default
   600                           ;	Fail-Safe Clock Monitor Enable bit
   601                           ;	FCMEN = 0x1, unprogrammed default
   602  300001                     	org	3145729
   603  300001  FF                 	db	255
   604                           
   605                           ;Config register CONFIG2L @ 0x300002
   606                           ;	unspecified, using default values
   607                           ;	Master Clear Enable bit
   608                           ;	MCLRE = 0x1, unprogrammed default
   609                           ;	Power-up Timer Enable bit
   610                           ;	PWRTE = 0x1, unprogrammed default
   611                           ;	Low-power BOR enable bit
   612                           ;	LPBOREN = 0x1, unprogrammed default
   613                           ;	Brown-out Reset Enable bits
   614                           ;	BOREN = 0x3, unprogrammed default
   615  300002                     	org	3145730
   616  300002  FF                 	db	255
   617                           
   618                           ;Config register CONFIG2H @ 0x300003
   619                           ;	unspecified, using default values
   620                           ;	Brown Out Reset Voltage selection bits
   621                           ;	BORV = 0x3, unprogrammed default
   622                           ;	ZCD Disable bit
   623                           ;	ZCD = 0x1, unprogrammed default
   624                           ;	PPSLOCK bit One-Way Set Enable bit
   625                           ;	PPS1WAY = 0x1, unprogrammed default
   626                           ;	Stack Full/Underflow Reset Enable bit
   627                           ;	STVREN = 0x1, unprogrammed default
   628                           ;	Debugger Enable bit
   629                           ;	DEBUG = 0x1, unprogrammed default
   630                           ;	Extended Instruction Set Enable bit
   631                           ;	XINST = 0x1, unprogrammed default
   632  300003                     	org	3145731
   633  300003  FF                 	db	255
   634                           
   635                           ;Config register CONFIG3L @ 0x300004
   636                           ;	WDT Period Select bits
   637                           ;	WDTCPS = 0x1F, unprogrammed default
   638                           ;	WDT operating mode
   639                           ;	WDTE = OFF, WDT Disabled
   640  300004                     	org	3145732
   641  300004  9F                 	db	159
   642                           
   643                           ;Config register CONFIG3H @ 0x300005
   644                           ;	unspecified, using default values
   645                           ;	WDT Window Select bits
   646                           ;	WDTCWS = 0x7, unprogrammed default
   647                           ;	WDT input clock selector
   648                           ;	WDTCCS = 0x7, unprogrammed default
   649  300005                     	org	3145733
   650  300005  FF                 	db	255
   651                           
   652                           ;Config register CONFIG4L @ 0x300006
   653                           ;	unspecified, using default values
   654                           ;	Write Protection Block 0
   655                           ;	WRT0 = 0x1, unprogrammed default
   656                           ;	Write Protection Block 1
   657                           ;	WRT1 = 0x1, unprogrammed default
   658                           ;	Write Protection Block 2
   659                           ;	WRT2 = 0x1, unprogrammed default
   660                           ;	Write Protection Block 3
   661                           ;	WRT3 = 0x1, unprogrammed default
   662                           ;	Write Protection Block 3
   663                           ;	WRT4 = 0x1, unprogrammed default
   664                           ;	Write Protection Block 3
   665                           ;	WRT5 = 0x1, unprogrammed default
   666                           ;	Write Protection Block 3
   667                           ;	WRT6 = 0x1, unprogrammed default
   668                           ;	Write Protection Block 3
   669                           ;	WRT7 = 0x1, unprogrammed default
   670  300006                     	org	3145734
   671  300006  FF                 	db	255
   672                           
   673                           ;Config register CONFIG4H @ 0x300007
   674                           ;	unspecified, using default values
   675                           ;	Configuration Register Write Protection bit
   676                           ;	WRTC = 0x1, unprogrammed default
   677                           ;	Boot Block Write Protection bit
   678                           ;	WRTB = 0x1, unprogrammed default
   679                           ;	Data EEPROM Write Protection bit
   680                           ;	WRTD = 0x1, unprogrammed default
   681                           ;	Scanner Enable bit
   682                           ;	SCANE = 0x1, unprogrammed default
   683                           ;	Low Voltage Programming Enable bit
   684                           ;	LVP = 0x1, unprogrammed default
   685  300007                     	org	3145735
   686  300007  FF                 	db	255
   687                           
   688                           ;Config register CONFIG5L @ 0x300008
   689                           ;	unspecified, using default values
   690                           ;	UserNVM Program Memory Code Protection bit
   691                           ;	CP = 0x1, unprogrammed default
   692                           ;	DataNVM Memory Code Protection bit
   693                           ;	CPD = 0x1, unprogrammed default
   694  300008                     	org	3145736
   695  300008  FF                 	db	255
   696                           
   697                           ;Config register CONFIG5H @ 0x300009
   698                           ;	unspecified, using default values
   699  300009                     	org	3145737
   700  300009  FF                 	db	255
   701                           
   702                           ;Config register CONFIG6L @ 0x30000A
   703                           ;	unspecified, using default values
   704                           ;	Table Read Protection Block 0
   705                           ;	EBTR0 = 0x1, unprogrammed default
   706                           ;	Table Read Protection Block 1
   707                           ;	EBTR1 = 0x1, unprogrammed default
   708                           ;	Table Read Protection Block 2
   709                           ;	EBTR2 = 0x1, unprogrammed default
   710                           ;	Table Read Protection Block 3
   711                           ;	EBTR3 = 0x1, unprogrammed default
   712                           ;	Table Read Protection Block 4
   713                           ;	EBTR4 = 0x1, unprogrammed default
   714                           ;	Table Read Protection Block 5
   715                           ;	EBTR5 = 0x1, unprogrammed default
   716                           ;	Table Read Protection Block 6
   717                           ;	EBTR6 = 0x1, unprogrammed default
   718                           ;	Table Read Protection Block 7
   719                           ;	EBTR7 = 0x1, unprogrammed default
   720  30000A                     	org	3145738
   721  30000A  FF                 	db	255
   722                           
   723                           ;Config register CONFIG6H @ 0x30000B
   724                           ;	unspecified, using default values
   725                           ;	Boot Block Table Read Protection bit
   726                           ;	EBTRB = 0x1, unprogrammed default
   727  30000B                     	org	3145739
   728  30000B  FF                 	db	255
   729                           tosu	equ	0xFFF
   730                           tosh	equ	0xFFE
   731                           tosl	equ	0xFFD
   732                           stkptr	equ	0xFFC
   733                           pclatu	equ	0xFFB
   734                           pclath	equ	0xFFA
   735                           pcl	equ	0xFF9
   736                           tblptru	equ	0xFF8
   737                           tblptrh	equ	0xFF7
   738                           tblptrl	equ	0xFF6
   739                           tablat	equ	0xFF5
   740                           prodh	equ	0xFF4
   741                           prodl	equ	0xFF3
   742                           indf0	equ	0xFEF
   743                           postinc0	equ	0xFEE
   744                           postdec0	equ	0xFED
   745                           preinc0	equ	0xFEC
   746                           plusw0	equ	0xFEB
   747                           fsr0h	equ	0xFEA
   748                           fsr0l	equ	0xFE9
   749                           wreg	equ	0xFE8
   750                           indf1	equ	0xFE7
   751                           postinc1	equ	0xFE6
   752                           postdec1	equ	0xFE5
   753                           preinc1	equ	0xFE4
   754                           plusw1	equ	0xFE3
   755                           fsr1h	equ	0xFE2
   756                           fsr1l	equ	0xFE1
   757                           bsr	equ	0xFE0
   758                           indf2	equ	0xFDF
   759                           postinc2	equ	0xFDE
   760                           postdec2	equ	0xFDD
   761                           preinc2	equ	0xFDC
   762                           plusw2	equ	0xFDB
   763                           fsr2h	equ	0xFDA
   764                           fsr2l	equ	0xFD9
   765                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      7       7
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_ADC_getval

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     189
                                              5 COMRAM     2     2      0
                         _ADC_getval
                           _ADC_init
                           _led_init
                            _set_led
 ---------------------------------------------------------------------------------
 (1) _set_led                                              2     0      2     120
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _led_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_getval                                           4     2      2      46
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _HighISR                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_getval
   _ADC_init
   _led_init
   _set_led

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E      7       7       1        7.4%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
ABS                  0      0       0       8        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BIGRAM             DE9      0       0      33        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Oct 31 21:35:21 2021

                    l131 0086                      l125 0108                      l151 0098  
                    l152 00B6                      l146 00F8                      l149 008A  
                    l830 00E0                      l832 00EA                      l834 00F2  
                    l836 00F4                      l828 0104                      l838 00F6  
                    l972 0088                      l980 0052                      l974 009E  
                    l982 0068                      l990 00BC                      l976 00AE  
                    l984 006E                      l992 00C0                      l986 0084  
                    l994 00CC                      l988 00B8                      u270 0098  
                    u271 0094                      u280 0068                      u281 0064  
                    u290 0084                      u291 0080                      wreg 000FE8  
    __size_of_ADC_getval 0030                     i2l59 004A                     _main 00B8  
                   btemp 0008                     start 004E         __end_of_ADC_init 00FA  
        __end_of_HighISR 004E             ___param_bank 000000                    ?_main 0001  
                  _ADPCH 000F5F                    i2l910 003E                    i2l912 0042  
                  i2l914 0046                    i2l906 000A                    i2l908 001A  
                  _TMR0H 000FD4                    _TMR0L 000FD3          __end_of_set_led 0088  
                  ttemp5 0009                    ttemp6 000C                    ttemp7 0010  
                  status 000FD8                    wtemp8 0009          __initialization 00FA  
           __end_of_main 00E0                   ??_main 0006            __activetblptr 000000  
                 _ADRESH 000F64                ??_HighISR 0001             ??_ADC_getval 0004  
       __end_of_led_init 010A                   isa$std 000001                ??_set_led 0004  
              ?_ADC_init 0001       __end_of_ADC_getval 00B8               __accesstop 0060  
__end_of__initialization 00FA            ___rparam_used 000001           __pcstackCOMRAM 0001  
             ??_ADC_init 0002                  i2u13_40 001A                  i2u13_41 0016  
                i2u14_40 002C                  i2u14_41 0024                  i2u15_48 002E  
              ?_led_init 0001                  _HighISR 0008                _ADREFbits 000F58  
                __Hparam 0000                  __Lparam 0000                  __pcinit 00FA  
                __ramtop 0E00                  __ptext0 00B8                  __ptext1 0052  
                __ptext2 0104                  __ptext3 00E0                  __ptext4 0088  
                _set_led 0052               ??_led_init 0002     end_of_initialization 00FA  
       ADC_getval@tmpval 0004                _TRISAbits 000F81                _TRISBbits 000F82  
              _TRISFbits 000F86                _TRISGbits 000F87                _TRISHbits 000F88  
      __size_of_ADC_init 001A              _CM1CON0bits 000ED0              _CM1CON1bits 000ED1  
    start_initialization 00FA                 ?_HighISR 0001        __size_of_led_init 0006  
              __pintcode 0008                 ?_set_led 0002                 _ADC_init 00E0  
               _LATAbits 000F79                 _LATBbits 000F7A                 _LATFbits 000F7E  
               _LATGbits 000F7F                 _LATHbits 000F80                 _PIE0bits 000E29  
               _PIE2bits 000E2B                 _PIR0bits 000E33               _ADCON0bits 000F60  
             _CM1NCHbits 000ED2               _CM1PCHbits 000ED3         __size_of_HighISR 0046  
               __Hrparam 0000               _ADC_getval 0088                 __Lrparam 0000  
             _ANSELAbits 000E92         __size_of_set_led 0036             set_led@value 0002  
               _led_init 0104            __size_of_main 0028                 isa$xinst 000000  
               int$flags 0008               _INTCONbits 000FF2                 intlevel2 0000  
           _DAC1CON0bits 000EC6             _DAC1CON1bits 000EC7              ?_ADC_getval 0002  
          main@LDRoutput 0006  
