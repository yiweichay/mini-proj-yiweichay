

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Oct 31 21:23:11 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	text5,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    17                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 05/05/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F67K40 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     _ANSELAbits	set	3730
    55  0000                     _PIR0bits	set	3635
    56  0000                     _PIE0bits	set	3625
    57  0000                     _PIE2bits	set	3627
    58  0000                     _CM1CON1bits	set	3793
    59  0000                     _CM1CON0bits	set	3792
    60  0000                     _CM1PCHbits	set	3795
    61  0000                     _CM1NCHbits	set	3794
    62  0000                     _DAC1CON1bits	set	3783
    63  0000                     _DAC1CON0bits	set	3782
    64  0000                     _ADPCH	set	3935
    65  0000                     _ADREFbits	set	3928
    66  0000                     _ADRESH	set	3940
    67  0000                     _ADCON0bits	set	3936
    68  0000                     _TRISHbits	set	3976
    69  0000                     _LATBbits	set	3962
    70  0000                     _LATFbits	set	3966
    71  0000                     _LATAbits	set	3961
    72  0000                     _LATGbits	set	3967
    73  0000                     _TRISBbits	set	3970
    74  0000                     _TRISAbits	set	3969
    75  0000                     _TRISGbits	set	3975
    76  0000                     _TMR0L	set	4051
    77  0000                     _TMR0H	set	4052
    78  0000                     _LATHbits	set	3968
    79  0000                     _INTCONbits	set	4082
    80  0000                     _TRISFbits	set	3974
    81                           
    82                           ; #config settings
    83                           
    84                           	psect	cinit
    85  0000F0                     __pcinit:
    86                           	callstack 0
    87  0000F0                     start_initialization:
    88                           	callstack 0
    89  0000F0                     __initialization:
    90                           	callstack 0
    91  0000F0                     end_of_initialization:
    92                           	callstack 0
    93  0000F0                     __end_of__initialization:
    94                           	callstack 0
    95  0000F0  9008               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    96  0000F2  9208               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    97  0000F4  0100               	movlb	0
    98  0000F6  EF29  F000         	goto	_main	;jump to C main() function
    99                           
   100                           	psect	cstackCOMRAM
   101  000001                     __pcstackCOMRAM:
   102                           	callstack 0
   103  000001                     ??_HighISR:
   104                           
   105                           ; 1 bytes @ 0x0
   106  000001                     	ds	1
   107  000002                     ?_ADC_getval:
   108                           	callstack 0
   109                           
   110                           ; 2 bytes @ 0x1
   111  000002                     	ds	2
   112  000004                     ADC_getval@tmpval:
   113                           	callstack 0
   114                           
   115                           ; 2 bytes @ 0x3
   116  000004                     	ds	2
   117  000006                     main@LDRoutput:
   118                           	callstack 0
   119                           
   120                           ; 2 bytes @ 0x5
   121  000006                     	ds	2
   122                           
   123 ;;
   124 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   125 ;;
   126 ;; *************** function _main *****************
   127 ;; Defined at:
   128 ;;		line 27 in file "main.c"
   129 ;; Parameters:    Size  Location     Type
   130 ;;		None
   131 ;; Auto vars:     Size  Location     Type
   132 ;;  LDRoutput       2    5[COMRAM] unsigned int 
   133 ;; Return value:  Size  Location     Type
   134 ;;                  1    wreg      void 
   135 ;; Registers used:
   136 ;;		wreg, status,2, status,0, cstack
   137 ;; Tracked objects:
   138 ;;		On entry : 0/0
   139 ;;		On exit  : 0/0
   140 ;;		Unchanged: 0/0
   141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   143 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   145 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   146 ;;Total ram usage:        2 bytes
   147 ;; Hardware stack levels required when called: 2
   148 ;; This function calls:
   149 ;;		_ADC_getval
   150 ;;		_ADC_init
   151 ;;		_led_init
   152 ;;		_led_off
   153 ;;		_led_on
   154 ;; This function is called by:
   155 ;;		Startup code after reset
   156 ;; This function uses a non-reentrant model
   157 ;;
   158                           
   159                           	psect	text0
   160  000052                     __ptext0:
   161                           	callstack 0
   162  000052                     _main:
   163                           	callstack 29
   164  000052                     
   165                           ;main.c: 29:     led_init();
   166  000052  EC7D  F000         	call	_led_init	;wreg free
   167  000056                     
   168                           ;main.c: 30:     ADC_init();
   169  000056  EC6B  F000         	call	_ADC_init	;wreg free
   170  00005A                     l991:
   171                           
   172                           ;main.c: 34:         LDRoutput = ADC_getval();
   173  00005A  EC53  F000         	call	_ADC_getval	;wreg free
   174  00005E  C002  F006         	movff	?_ADC_getval,main@LDRoutput
   175  000062  C003  F007         	movff	?_ADC_getval+1,main@LDRoutput+1
   176  000066                     
   177                           ;main.c: 35:         if(LDRoutput >= 0b1111){
   178  000066  5007               	movf	(main@LDRoutput+1)^0,w,c
   179  000068  E109               	bnz	u280
   180  00006A  0E0F               	movlw	15
   181  00006C  5C06               	subwf	main@LDRoutput^0,w,c
   182  00006E  A0D8               	btfss	status,0,c
   183  000070  EF3C  F000         	goto	u281
   184  000074  EF3E  F000         	goto	u280
   185  000078                     u281:
   186  000078  EF42  F000         	goto	l997
   187  00007C                     u280:
   188  00007C                     
   189                           ;main.c: 36:             led_off();
   190  00007C  EC82  F000         	call	_led_off	;wreg free
   191                           
   192                           ;main.c: 37:         }
   193  000080  EF2D  F000         	goto	l991
   194  000084                     l997:
   195  000084  5007               	movf	(main@LDRoutput+1)^0,w,c
   196  000086  E107               	bnz	u291
   197  000088  0E0D               	movlw	13
   198  00008A  5C06               	subwf	main@LDRoutput^0,w,c
   199  00008C  B0D8               	btfsc	status,0,c
   200  00008E  EF4B  F000         	goto	u291
   201  000092  EF4D  F000         	goto	u290
   202  000096                     u291:
   203  000096  EF2D  F000         	goto	l991
   204  00009A                     u290:
   205  00009A                     
   206                           ;main.c: 39:             led_on();
   207  00009A  EC80  F000         	call	_led_on	;wreg free
   208  00009E  EF2D  F000         	goto	l991
   209  0000A2  EF27  F000         	goto	start
   210  0000A6                     __end_of_main:
   211                           	callstack 0
   212                           
   213 ;; *************** function _led_on *****************
   214 ;; Defined at:
   215 ;;		line 18 in file "led.c"
   216 ;; Parameters:    Size  Location     Type
   217 ;;		None
   218 ;; Auto vars:     Size  Location     Type
   219 ;;		None
   220 ;; Return value:  Size  Location     Type
   221 ;;                  1    wreg      void 
   222 ;; Registers used:
   223 ;;		None
   224 ;; Tracked objects:
   225 ;;		On entry : 0/0
   226 ;;		On exit  : 0/0
   227 ;;		Unchanged: 0/0
   228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   233 ;;Total ram usage:        0 bytes
   234 ;; Hardware stack levels used: 1
   235 ;; Hardware stack levels required when called: 1
   236 ;; This function calls:
   237 ;;		Nothing
   238 ;; This function is called by:
   239 ;;		_main
   240 ;; This function uses a non-reentrant model
   241 ;;
   242                           
   243                           	psect	text1
   244  000100                     __ptext1:
   245                           	callstack 0
   246  000100                     _led_on:
   247                           	callstack 29
   248  000100                     
   249                           ;led.c: 20:     LATHbits.LATH3 = 1;
   250  000100  8680               	bsf	128,3,c	;volatile
   251  000102  0012               	return		;funcret
   252  000104                     __end_of_led_on:
   253                           	callstack 0
   254                           
   255 ;; *************** function _led_off *****************
   256 ;; Defined at:
   257 ;;		line 23 in file "led.c"
   258 ;; Parameters:    Size  Location     Type
   259 ;;		None
   260 ;; Auto vars:     Size  Location     Type
   261 ;;		None
   262 ;; Return value:  Size  Location     Type
   263 ;;                  1    wreg      void 
   264 ;; Registers used:
   265 ;;		None
   266 ;; Tracked objects:
   267 ;;		On entry : 0/0
   268 ;;		On exit  : 0/0
   269 ;;		Unchanged: 0/0
   270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   275 ;;Total ram usage:        0 bytes
   276 ;; Hardware stack levels used: 1
   277 ;; Hardware stack levels required when called: 1
   278 ;; This function calls:
   279 ;;		Nothing
   280 ;; This function is called by:
   281 ;;		_main
   282 ;; This function uses a non-reentrant model
   283 ;;
   284                           
   285                           	psect	text2
   286  000104                     __ptext2:
   287                           	callstack 0
   288  000104                     _led_off:
   289                           	callstack 29
   290  000104                     
   291                           ;led.c: 25:     LATHbits.LATH3 = 0;
   292  000104  9680               	bcf	128,3,c	;volatile
   293  000106  0012               	return		;funcret
   294  000108                     __end_of_led_off:
   295                           	callstack 0
   296                           
   297 ;; *************** function _led_init *****************
   298 ;; Defined at:
   299 ;;		line 12 in file "led.c"
   300 ;; Parameters:    Size  Location     Type
   301 ;;		None
   302 ;; Auto vars:     Size  Location     Type
   303 ;;		None
   304 ;; Return value:  Size  Location     Type
   305 ;;                  1    wreg      void 
   306 ;; Registers used:
   307 ;;		None
   308 ;; Tracked objects:
   309 ;;		On entry : 0/0
   310 ;;		On exit  : 0/0
   311 ;;		Unchanged: 0/0
   312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   316 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   317 ;;Total ram usage:        0 bytes
   318 ;; Hardware stack levels used: 1
   319 ;; Hardware stack levels required when called: 1
   320 ;; This function calls:
   321 ;;		Nothing
   322 ;; This function is called by:
   323 ;;		_main
   324 ;; This function uses a non-reentrant model
   325 ;;
   326                           
   327                           	psect	text3
   328  0000FA                     __ptext3:
   329                           	callstack 0
   330  0000FA                     _led_init:
   331                           	callstack 29
   332  0000FA                     
   333                           ;led.c: 14:     LATHbits.LATH3 = 0;
   334  0000FA  9680               	bcf	128,3,c	;volatile
   335                           
   336                           ;led.c: 15:     TRISHbits.TRISH3 = 0;
   337  0000FC  9688               	bcf	136,3,c	;volatile
   338  0000FE  0012               	return		;funcret
   339  000100                     __end_of_led_init:
   340                           	callstack 0
   341                           
   342 ;; *************** function _ADC_init *****************
   343 ;; Defined at:
   344 ;;		line 9 in file "ADC.c"
   345 ;; Parameters:    Size  Location     Type
   346 ;;		None
   347 ;; Auto vars:     Size  Location     Type
   348 ;;		None
   349 ;; Return value:  Size  Location     Type
   350 ;;                  1    wreg      void 
   351 ;; Registers used:
   352 ;;		wreg, status,2
   353 ;; Tracked objects:
   354 ;;		On entry : 0/0
   355 ;;		On exit  : 0/0
   356 ;;		Unchanged: 0/0
   357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   362 ;;Total ram usage:        0 bytes
   363 ;; Hardware stack levels used: 1
   364 ;; Hardware stack levels required when called: 1
   365 ;; This function calls:
   366 ;;		Nothing
   367 ;; This function is called by:
   368 ;;		_main
   369 ;; This function uses a non-reentrant model
   370 ;;
   371                           
   372                           	psect	text4
   373  0000D6                     __ptext4:
   374                           	callstack 0
   375  0000D6                     _ADC_init:
   376                           	callstack 29
   377  0000D6                     
   378                           ;ADC.c: 11:     TRISAbits.TRISA3=1;
   379  0000D6  8681               	bsf	129,3,c	;volatile
   380                           
   381                           ;ADC.c: 12:     ANSELAbits.ANSELA3=1;
   382  0000D8  010E               	movlb	14	; () banked
   383  0000DA  8792               	bsf	146,3,b	;volatile
   384                           
   385                           ;ADC.c: 15:     ADREFbits.ADNREF = 0;
   386  0000DC  010F               	movlb	15	; () banked
   387  0000DE  9958               	bcf	88,4,b	;volatile
   388  0000E0                     
   389                           ; BSR set to: 15
   390                           ;ADC.c: 16:     ADREFbits.ADPREF = 0b00;
   391  0000E0  0EFC               	movlw	-4
   392  0000E2  1758               	andwf	88,f,b	;volatile
   393                           
   394                           ;ADC.c: 17:     ADPCH=0b11;
   395  0000E4  0E03               	movlw	3
   396  0000E6  6F5F               	movwf	95,b	;volatile
   397  0000E8                     
   398                           ; BSR set to: 15
   399                           ;ADC.c: 18:     ADCON0bits.ADFM = 0;
   400  0000E8  9460               	bcf	96,2,c	;volatile
   401  0000EA                     
   402                           ; BSR set to: 15
   403                           ;ADC.c: 19:     ADCON0bits.ADCS = 1;
   404  0000EA  8860               	bsf	96,4,c	;volatile
   405  0000EC                     
   406                           ; BSR set to: 15
   407                           ;ADC.c: 20:     ADCON0bits.ADON = 1;
   408  0000EC  8E60               	bsf	96,7,c	;volatile
   409  0000EE                     
   410                           ; BSR set to: 15
   411  0000EE  0012               	return		;funcret
   412  0000F0                     __end_of_ADC_init:
   413                           	callstack 0
   414                           
   415 ;; *************** function _ADC_getval *****************
   416 ;; Defined at:
   417 ;;		line 23 in file "ADC.c"
   418 ;; Parameters:    Size  Location     Type
   419 ;;		None
   420 ;; Auto vars:     Size  Location     Type
   421 ;;  tmpval          2    3[COMRAM] unsigned int 
   422 ;; Return value:  Size  Location     Type
   423 ;;                  2    1[COMRAM] unsigned int 
   424 ;; Registers used:
   425 ;;		wreg, status,2, status,0
   426 ;; Tracked objects:
   427 ;;		On entry : 0/0
   428 ;;		On exit  : 0/0
   429 ;;		Unchanged: 0/0
   430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   431 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   432 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   434 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   435 ;;Total ram usage:        4 bytes
   436 ;; Hardware stack levels used: 1
   437 ;; Hardware stack levels required when called: 1
   438 ;; This function calls:
   439 ;;		Nothing
   440 ;; This function is called by:
   441 ;;		_main
   442 ;; This function uses a non-reentrant model
   443 ;;
   444                           
   445                           	psect	text5
   446  0000A6                     __ptext5:
   447                           	callstack 0
   448  0000A6                     _ADC_getval:
   449                           	callstack 29
   450  0000A6                     
   451                           ;ADC.c: 25:     unsigned int tmpval;;ADC.c: 27:     ADCON0bits.GO = 1;
   452  0000A6  8060               	bsf	96,0,c	;volatile
   453  0000A8                     l154:
   454  0000A8  B060               	btfsc	96,0,c	;volatile
   455  0000AA  EF59  F000         	goto	u271
   456  0000AE  EF5B  F000         	goto	u270
   457  0000B2                     u271:
   458  0000B2  EF54  F000         	goto	l154
   459  0000B6                     u270:
   460  0000B6                     
   461                           ;ADC.c: 31:     tmpval = ADRESH;
   462  0000B6  CF64 F004          	movff	3940,ADC_getval@tmpval	;volatile
   463  0000BA  6A05               	clrf	(ADC_getval@tmpval+1)^0,c
   464  0000BC                     
   465                           ;ADC.c: 35:     tmpval = 255 - tmpval;
   466  0000BC  5004               	movf	ADC_getval@tmpval^0,w,c
   467  0000BE  08FF               	sublw	255
   468  0000C0  6E04               	movwf	ADC_getval@tmpval^0,c
   469  0000C2  5005               	movf	(ADC_getval@tmpval+1)^0,w,c
   470  0000C4  A0D8               	btfss	status,0,c
   471  0000C6  2AE8               	incf	wreg,f,c
   472  0000C8  0800               	sublw	0
   473  0000CA  6E05               	movwf	(ADC_getval@tmpval+1)^0,c
   474  0000CC                     
   475                           ;ADC.c: 37:     return tmpval;
   476  0000CC  C004  F002         	movff	ADC_getval@tmpval,?_ADC_getval
   477  0000D0  C005  F003         	movff	ADC_getval@tmpval+1,?_ADC_getval+1
   478  0000D4  0012               	return		;funcret
   479  0000D6                     __end_of_ADC_getval:
   480                           	callstack 0
   481                           
   482 ;; *************** function _HighISR *****************
   483 ;; Defined at:
   484 ;;		line 22 in file "interrupts.c"
   485 ;; Parameters:    Size  Location     Type
   486 ;;		None
   487 ;; Auto vars:     Size  Location     Type
   488 ;;		None
   489 ;; Return value:  Size  Location     Type
   490 ;;                  1    wreg      void 
   491 ;; Registers used:
   492 ;;		wreg, status,2, status,0
   493 ;; Tracked objects:
   494 ;;		On entry : 0/0
   495 ;;		On exit  : 0/0
   496 ;;		Unchanged: 0/0
   497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   500 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   501 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   502 ;;Total ram usage:        1 bytes
   503 ;; Hardware stack levels used: 1
   504 ;; This function calls:
   505 ;;		Nothing
   506 ;; This function is called by:
   507 ;;		Interrupt level 2
   508 ;; This function uses a non-reentrant model
   509 ;;
   510                           
   511                           	psect	intcode
   512  000008                     __pintcode:
   513                           	callstack 0
   514  000008                     _HighISR:
   515                           	callstack 29
   516                           
   517                           ;incstack = 0
   518  000008  8208               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   519  00000A                     
   520                           ;interrupts.c: 25:     if(PIR0bits.TMR0IF){
   521  00000A  010E               	movlb	14	; () banked
   522  00000C  AB33               	btfss	51,5,b	;volatile
   523  00000E  EF0B  F000         	goto	i2u13_41
   524  000012  EF0D  F000         	goto	i2u13_40
   525  000016                     i2u13_41:
   526  000016  EF25  F000         	goto	i2l64
   527  00001A                     i2u13_40:
   528  00001A                     
   529                           ; BSR set to: 14
   530                           ;interrupts.c: 26:         LATHbits.LATH3 = !LATHbits.LATH3;
   531  00001A  A680               	btfss	128,3,c	;volatile
   532  00001C  EF12  F000         	goto	i2u14_41
   533  000020  EF16  F000         	goto	i2u14_40
   534  000024                     i2u14_41:
   535  000024  6A01               	clrf	??_HighISR^0,c
   536  000026  2A01               	incf	??_HighISR^0,f,c
   537  000028  EF17  F000         	goto	i2u15_48
   538  00002C                     i2u14_40:
   539  00002C  6A01               	clrf	??_HighISR^0,c
   540  00002E                     i2u15_48:
   541  00002E  4601               	rlncf	??_HighISR^0,f,c
   542  000030  4601               	rlncf	??_HighISR^0,f,c
   543  000032  4601               	rlncf	??_HighISR^0,f,c
   544  000034  5080               	movf	128,w,c	;volatile
   545  000036  1801               	xorwf	??_HighISR^0,w,c
   546  000038  0BF7               	andlw	-9
   547  00003A  1801               	xorwf	??_HighISR^0,w,c
   548  00003C  6E80               	movwf	128,c	;volatile
   549  00003E                     
   550                           ;interrupts.c: 27:         TMR0H = 0b1011;
   551  00003E  0E0B               	movlw	11
   552  000040  6ED4               	movwf	212,c	;volatile
   553  000042                     
   554                           ;interrupts.c: 28:         TMR0L = 0b11011011;
   555  000042  0EDB               	movlw	219
   556  000044  6ED3               	movwf	211,c	;volatile
   557  000046                     
   558                           ;interrupts.c: 29:         PIR0bits.TMR0IF = 0;
   559  000046  010E               	movlb	14	; () banked
   560  000048  9B33               	bcf	51,5,b	;volatile
   561  00004A                     i2l64:
   562                           
   563                           ; BSR set to: 14
   564  00004A  9208               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   565  00004C  0011               	retfie		f
   566  00004E                     __end_of_HighISR:
   567                           	callstack 0
   568  0000                     
   569                           	psect	rparam
   570  0000                     
   571                           	psect	temp
   572  000008                     btemp:
   573                           	callstack 0
   574  000008                     	ds	1
   575  0000                     int$flags	set	btemp
   576  0000                     wtemp8	set	btemp+1
   577  0000                     ttemp5	set	btemp+1
   578  0000                     ttemp6	set	btemp+4
   579  0000                     ttemp7	set	btemp+8
   580                           
   581                           	psect	idloc
   582                           
   583                           ;Config register IDLOC0 @ 0x200000
   584                           ;	unspecified, using default values
   585  200000                     	org	2097152
   586  200000  0FFF               	dw	4095
   587                           
   588                           ;Config register IDLOC1 @ 0x200002
   589                           ;	unspecified, using default values
   590  200002                     	org	2097154
   591  200002  0FFF               	dw	4095
   592                           
   593                           ;Config register IDLOC2 @ 0x200004
   594                           ;	unspecified, using default values
   595  200004                     	org	2097156
   596  200004  0FFF               	dw	4095
   597                           
   598                           ;Config register IDLOC3 @ 0x200006
   599                           ;	unspecified, using default values
   600  200006                     	org	2097158
   601  200006  0FFF               	dw	4095
   602                           
   603                           ;Config register IDLOC4 @ 0x200008
   604                           ;	unspecified, using default values
   605  200008                     	org	2097160
   606  200008  0FFF               	dw	4095
   607                           
   608                           ;Config register IDLOC5 @ 0x20000A
   609                           ;	unspecified, using default values
   610  20000A                     	org	2097162
   611  20000A  0FFF               	dw	4095
   612                           
   613                           ;Config register IDLOC6 @ 0x20000C
   614                           ;	unspecified, using default values
   615  20000C                     	org	2097164
   616  20000C  0FFF               	dw	4095
   617                           
   618                           ;Config register IDLOC7 @ 0x20000E
   619                           ;	unspecified, using default values
   620  20000E                     	org	2097166
   621  20000E  0FFF               	dw	4095
   622                           
   623                           	psect	config
   624                           
   625                           ;Config register CONFIG1L @ 0x300000
   626                           ;	External Oscillator mode Selection bits
   627                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
   628                           ;	Power-up default value for COSC bits
   629                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
   630  300000                     	org	3145728
   631  300000  AA                 	db	170
   632                           
   633                           ;Config register CONFIG1H @ 0x300001
   634                           ;	unspecified, using default values
   635                           ;	Clock Out Enable bit
   636                           ;	CLKOUTEN = 0x1, unprogrammed default
   637                           ;	Clock Switch Enable bit
   638                           ;	CSWEN = 0x1, unprogrammed default
   639                           ;	Fail-Safe Clock Monitor Enable bit
   640                           ;	FCMEN = 0x1, unprogrammed default
   641  300001                     	org	3145729
   642  300001  FF                 	db	255
   643                           
   644                           ;Config register CONFIG2L @ 0x300002
   645                           ;	unspecified, using default values
   646                           ;	Master Clear Enable bit
   647                           ;	MCLRE = 0x1, unprogrammed default
   648                           ;	Power-up Timer Enable bit
   649                           ;	PWRTE = 0x1, unprogrammed default
   650                           ;	Low-power BOR enable bit
   651                           ;	LPBOREN = 0x1, unprogrammed default
   652                           ;	Brown-out Reset Enable bits
   653                           ;	BOREN = 0x3, unprogrammed default
   654  300002                     	org	3145730
   655  300002  FF                 	db	255
   656                           
   657                           ;Config register CONFIG2H @ 0x300003
   658                           ;	unspecified, using default values
   659                           ;	Brown Out Reset Voltage selection bits
   660                           ;	BORV = 0x3, unprogrammed default
   661                           ;	ZCD Disable bit
   662                           ;	ZCD = 0x1, unprogrammed default
   663                           ;	PPSLOCK bit One-Way Set Enable bit
   664                           ;	PPS1WAY = 0x1, unprogrammed default
   665                           ;	Stack Full/Underflow Reset Enable bit
   666                           ;	STVREN = 0x1, unprogrammed default
   667                           ;	Debugger Enable bit
   668                           ;	DEBUG = 0x1, unprogrammed default
   669                           ;	Extended Instruction Set Enable bit
   670                           ;	XINST = 0x1, unprogrammed default
   671  300003                     	org	3145731
   672  300003  FF                 	db	255
   673                           
   674                           ;Config register CONFIG3L @ 0x300004
   675                           ;	WDT Period Select bits
   676                           ;	WDTCPS = 0x1F, unprogrammed default
   677                           ;	WDT operating mode
   678                           ;	WDTE = OFF, WDT Disabled
   679  300004                     	org	3145732
   680  300004  9F                 	db	159
   681                           
   682                           ;Config register CONFIG3H @ 0x300005
   683                           ;	unspecified, using default values
   684                           ;	WDT Window Select bits
   685                           ;	WDTCWS = 0x7, unprogrammed default
   686                           ;	WDT input clock selector
   687                           ;	WDTCCS = 0x7, unprogrammed default
   688  300005                     	org	3145733
   689  300005  FF                 	db	255
   690                           
   691                           ;Config register CONFIG4L @ 0x300006
   692                           ;	unspecified, using default values
   693                           ;	Write Protection Block 0
   694                           ;	WRT0 = 0x1, unprogrammed default
   695                           ;	Write Protection Block 1
   696                           ;	WRT1 = 0x1, unprogrammed default
   697                           ;	Write Protection Block 2
   698                           ;	WRT2 = 0x1, unprogrammed default
   699                           ;	Write Protection Block 3
   700                           ;	WRT3 = 0x1, unprogrammed default
   701                           ;	Write Protection Block 3
   702                           ;	WRT4 = 0x1, unprogrammed default
   703                           ;	Write Protection Block 3
   704                           ;	WRT5 = 0x1, unprogrammed default
   705                           ;	Write Protection Block 3
   706                           ;	WRT6 = 0x1, unprogrammed default
   707                           ;	Write Protection Block 3
   708                           ;	WRT7 = 0x1, unprogrammed default
   709  300006                     	org	3145734
   710  300006  FF                 	db	255
   711                           
   712                           ;Config register CONFIG4H @ 0x300007
   713                           ;	unspecified, using default values
   714                           ;	Configuration Register Write Protection bit
   715                           ;	WRTC = 0x1, unprogrammed default
   716                           ;	Boot Block Write Protection bit
   717                           ;	WRTB = 0x1, unprogrammed default
   718                           ;	Data EEPROM Write Protection bit
   719                           ;	WRTD = 0x1, unprogrammed default
   720                           ;	Scanner Enable bit
   721                           ;	SCANE = 0x1, unprogrammed default
   722                           ;	Low Voltage Programming Enable bit
   723                           ;	LVP = 0x1, unprogrammed default
   724  300007                     	org	3145735
   725  300007  FF                 	db	255
   726                           
   727                           ;Config register CONFIG5L @ 0x300008
   728                           ;	unspecified, using default values
   729                           ;	UserNVM Program Memory Code Protection bit
   730                           ;	CP = 0x1, unprogrammed default
   731                           ;	DataNVM Memory Code Protection bit
   732                           ;	CPD = 0x1, unprogrammed default
   733  300008                     	org	3145736
   734  300008  FF                 	db	255
   735                           
   736                           ;Config register CONFIG5H @ 0x300009
   737                           ;	unspecified, using default values
   738  300009                     	org	3145737
   739  300009  FF                 	db	255
   740                           
   741                           ;Config register CONFIG6L @ 0x30000A
   742                           ;	unspecified, using default values
   743                           ;	Table Read Protection Block 0
   744                           ;	EBTR0 = 0x1, unprogrammed default
   745                           ;	Table Read Protection Block 1
   746                           ;	EBTR1 = 0x1, unprogrammed default
   747                           ;	Table Read Protection Block 2
   748                           ;	EBTR2 = 0x1, unprogrammed default
   749                           ;	Table Read Protection Block 3
   750                           ;	EBTR3 = 0x1, unprogrammed default
   751                           ;	Table Read Protection Block 4
   752                           ;	EBTR4 = 0x1, unprogrammed default
   753                           ;	Table Read Protection Block 5
   754                           ;	EBTR5 = 0x1, unprogrammed default
   755                           ;	Table Read Protection Block 6
   756                           ;	EBTR6 = 0x1, unprogrammed default
   757                           ;	Table Read Protection Block 7
   758                           ;	EBTR7 = 0x1, unprogrammed default
   759  30000A                     	org	3145738
   760  30000A  FF                 	db	255
   761                           
   762                           ;Config register CONFIG6H @ 0x30000B
   763                           ;	unspecified, using default values
   764                           ;	Boot Block Table Read Protection bit
   765                           ;	EBTRB = 0x1, unprogrammed default
   766  30000B                     	org	3145739
   767  30000B  FF                 	db	255
   768                           tosu	equ	0xFFF
   769                           tosh	equ	0xFFE
   770                           tosl	equ	0xFFD
   771                           stkptr	equ	0xFFC
   772                           pclatu	equ	0xFFB
   773                           pclath	equ	0xFFA
   774                           pcl	equ	0xFF9
   775                           tblptru	equ	0xFF8
   776                           tblptrh	equ	0xFF7
   777                           tblptrl	equ	0xFF6
   778                           tablat	equ	0xFF5
   779                           prodh	equ	0xFF4
   780                           prodl	equ	0xFF3
   781                           indf0	equ	0xFEF
   782                           postinc0	equ	0xFEE
   783                           postdec0	equ	0xFED
   784                           preinc0	equ	0xFEC
   785                           plusw0	equ	0xFEB
   786                           fsr0h	equ	0xFEA
   787                           fsr0l	equ	0xFE9
   788                           wreg	equ	0xFE8
   789                           indf1	equ	0xFE7
   790                           postinc1	equ	0xFE6
   791                           postdec1	equ	0xFE5
   792                           preinc1	equ	0xFE4
   793                           plusw1	equ	0xFE3
   794                           fsr1h	equ	0xFE2
   795                           fsr1l	equ	0xFE1
   796                           bsr	equ	0xFE0
   797                           indf2	equ	0xFDF
   798                           postinc2	equ	0xFDE
   799                           postdec2	equ	0xFDD
   800                           preinc2	equ	0xFDC
   801                           plusw2	equ	0xFDB
   802                           fsr2h	equ	0xFDA
   803                           fsr2l	equ	0xFD9
   804                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      7       7
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_ADC_getval

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      91
                                              5 COMRAM     2     2      0
                         _ADC_getval
                           _ADC_init
                           _led_init
                            _led_off
                             _led_on
 ---------------------------------------------------------------------------------
 (1) _led_on                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _led_off                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _led_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_getval                                           4     2      2      46
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _HighISR                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_getval
   _ADC_init
   _led_init
   _led_off
   _led_on

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E      7       7       1        7.4%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
ABS                  0      0       0       8        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BIGRAM             DE9      0       0      33        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Oct 31 21:23:11 2021

                    l130 00FE                      l133 0102                      l151 00EE  
                    l136 0106                      l154 00A8                      l156 00B6  
                    l157 00D4                      l841 00EA                      l833 00FA  
                    l843 00EC                      l835 00D6                      l837 00E0  
                    l853 0104                      l839 00E8                      l855 0100  
                    l981 00BC                      l983 00CC                      l991 005A  
                    l993 0066                      l979 00A6                      l995 007C  
                    l987 0052                      l997 0084                      l989 0056  
                    l999 009A                      u270 00B6                      u271 00B2  
                    u280 007C                      u281 0078                      u290 009A  
                    u291 0096                      wreg 000FE8      __size_of_ADC_getval 0030  
                   i2l64 004A                     _main 0052                     btemp 0008  
                   start 004E         __end_of_ADC_init 00F0          __end_of_HighISR 004E  
           ___param_bank 000000                    ?_main 0001                    _ADPCH 000F5F  
                  i2l921 0046                    i2l913 000A                    i2l915 001A  
                  i2l917 003E                    i2l919 0042                    _TMR0H 000FD4  
                  _TMR0L 000FD3          __end_of_led_off 0108                    ttemp5 0009  
                  ttemp6 000C                    ttemp7 0010                    status 000FD8  
                  wtemp8 0009          __initialization 00F0             __end_of_main 00A6  
                 ??_main 0006            __activetblptr 000000                   _ADRESH 000F64  
              ??_HighISR 0001             ??_ADC_getval 0004         __end_of_led_init 0100  
                 _led_on 0100                   isa$std 000001                ??_led_off 0002  
              ?_ADC_init 0001       __end_of_ADC_getval 00D6               __accesstop 0060  
__end_of__initialization 00F0            ___rparam_used 000001           __pcstackCOMRAM 0001  
             ??_ADC_init 0002                  ?_led_on 0001                  i2u13_40 001A  
                i2u13_41 0016                  i2u14_40 002C                  i2u14_41 0024  
                i2u15_48 002E                ?_led_init 0001                  _HighISR 0008  
              _ADREFbits 000F58                  __Hparam 0000                  __Lparam 0000  
        __size_of_led_on 0004                  __pcinit 00F0                  __ramtop 0E00  
                __ptext0 0052                  __ptext1 0100                  __ptext2 0104  
                __ptext3 00FA                  __ptext4 00D6                  __ptext5 00A6  
                _led_off 0104               ??_led_init 0002     end_of_initialization 00F0  
       ADC_getval@tmpval 0004                _TRISAbits 000F81                _TRISBbits 000F82  
              _TRISFbits 000F86                _TRISGbits 000F87                _TRISHbits 000F88  
      __size_of_ADC_init 001A              _CM1CON0bits 000ED0              _CM1CON1bits 000ED1  
         __end_of_led_on 0104      start_initialization 00F0                 ??_led_on 0002  
               ?_HighISR 0001        __size_of_led_init 0006                __pintcode 0008  
               ?_led_off 0001                 _ADC_init 00D6                 _LATAbits 000F79  
               _LATBbits 000F7A                 _LATFbits 000F7E                 _LATGbits 000F7F  
               _LATHbits 000F80                 _PIE0bits 000E29                 _PIE2bits 000E2B  
               _PIR0bits 000E33               _ADCON0bits 000F60               _CM1NCHbits 000ED2  
             _CM1PCHbits 000ED3         __size_of_HighISR 0046                 __Hrparam 0000  
             _ADC_getval 00A6                 __Lrparam 0000               _ANSELAbits 000E92  
       __size_of_led_off 0004                 _led_init 00FA            __size_of_main 0054  
               isa$xinst 000000                 int$flags 0008               _INTCONbits 000FF2  
               intlevel2 0000             _DAC1CON0bits 000EC6             _DAC1CON1bits 000EC7  
            ?_ADC_getval 0002            main@LDRoutput 0006  
